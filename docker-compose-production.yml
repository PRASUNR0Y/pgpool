# Production-ready PostgreSQL HA cluster with custom pgpool
# This setup includes streaming replication using bitnami/postgresql:16

services:
  # PostgreSQL Master Node
  postgres-master:
    image: bitnami/postgresql:16
    container_name: postgres-master
    environment:
      - POSTGRESQL_REPLICATION_MODE=master
      - POSTGRESQL_REPLICATION_USER=repluser
      - POSTGRESQL_REPLICATION_PASSWORD=replpass
      - POSTGRESQL_USERNAME=testuser
      - POSTGRESQL_PASSWORD=testpass
      - POSTGRESQL_DATABASE=testdb
      - POSTGRESQL_POSTGRES_PASSWORD=adminpassword
    ports:
      - "15432:5432"
    volumes:
      - ./config/postgresql.conf:/bitnami/postgresql/conf/postgresql.conf
      - postgres_master_data:/bitnami/postgresql
    networks:
      - pgpool-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U testuser"]
      interval: 10s
      timeout: 5s
      retries: 5

  # PostgreSQL Replica Node 1
  postgres-replica1:
    image: bitnami/postgresql:16
    container_name: postgres-replica1
    environment:
      - POSTGRESQL_REPLICATION_MODE=slave
      - POSTGRESQL_MASTER_HOST=postgres-master
      - POSTGRESQL_REPLICATION_USER=repluser
      - POSTGRESQL_REPLICATION_PASSWORD=replpass
      - POSTGRESQL_USERNAME=testuser
      - POSTGRESQL_PASSWORD=testpass
      - POSTGRESQL_POSTGRES_PASSWORD=adminpassword
    ports:
      - "15433:5432"
    volumes:
      - ./config/postgresql.conf:/bitnami/postgresql/conf/postgresql.conf
      - postgres_replica1_data:/bitnami/postgresql
    networks:
      - pgpool-network
    depends_on:
      - postgres-master
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U testuser"]
      interval: 10s
      timeout: 5s
      retries: 5

  # PostgreSQL Replica Node 2
  postgres-replica2:
    image: bitnami/postgresql:16
    container_name: postgres-replica2
    environment:
      - POSTGRESQL_REPLICATION_MODE=slave
      - POSTGRESQL_MASTER_HOST=postgres-master
      - POSTGRESQL_REPLICATION_USER=repluser
      - POSTGRESQL_REPLICATION_PASSWORD=replpass
      - POSTGRESQL_USERNAME=testuser
      - POSTGRESQL_PASSWORD=testpass
      - POSTGRESQL_POSTGRES_PASSWORD=adminpassword
    ports:
      - "15434:5432"
    volumes:
      - ./config/postgresql.conf:/bitnami/postgresql/conf/postgresql.conf
      - postgres_replica2_data:/bitnami/postgresql
    networks:
      - pgpool-network
    depends_on:
      - postgres-master
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U testuser"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Pgpool-II with enhanced environment variable support
  pgpool:
    build: .
    container_name: pgpool
    ports:
      - "5432:5432"
      - "9898:9898"  # PCP port for administration
    environment:
      # Enhanced backend configuration with weights
      # Format: index:hostname:port[:weight]
      # Master gets weight 0, replica1 gets weight 1, replica2 gets weight 1
      - PGPOOL_BACKEND_NODES=0:postgres-master:5432:1,1:postgres-replica1:5432:1,2:postgres-replica2:5432:1
      
      # Streaming replication configuration
      - PGPOOL_SR_CHECK_USER=testuser
      - PGPOOL_SR_CHECK_PASSWORD=testpass
      - PGPOOL_SR_CHECK_PERIOD=30
      - PGPOOL_SR_CHECK_DATABASE=testdb
      
      # Load balancing configuration
      - PGPOOL_LOAD_BALANCE_MODE=on
      - PGPOOL_DISABLE_LOAD_BALANCE_ON_WRITE=transaction
      - PGPOOL_STATEMENT_LEVEL_LOAD_BALANCE=off
      
      # Health check configuration
      - PGPOOL_HEALTH_CHECK_PERIOD=30
      - PGPOOL_HEALTH_CHECK_TIMEOUT=10
      - PGPOOL_HEALTH_CHECK_USER=testuser
      - PGPOOL_HEALTH_CHECK_PASSWORD=testpass
      - PGPOOL_HEALTH_CHECK_MAX_RETRIES=5
      - PGPOOL_HEALTH_CHECK_RETRY_DELAY=5
      - PGPOOL_CONNECT_TIMEOUT=10000
      
      # Authentication
      - PGPOOL_POSTGRES_USERNAME=postgres
      - PGPOOL_POSTGRES_PASSWORD=adminpassword
      - PGPOOL_ADMIN_USERNAME=admin
      - PGPOOL_ADMIN_PASSWORD=adminpass
      
      # Connection settings
      - PGPOOL_LISTEN_ADDRESSES=*
      - PGPOOL_PORT_NUMBER=5432
      - PGPOOL_MAX_POOL=15
      - PGPOOL_CHILD_LIFE_TIME=300
      - PGPOOL_CONNECTION_LIFE_TIME=0
      - PGPOOL_CLIENT_IDLE_LIMIT=0
      
      # Failover configuration
      - PGPOOL_FAILOVER_COMMAND=echo ">>> Failover - searching for new primary node!"
      - PGPOOL_FAILOVER_ON_BACKEND_ERROR=off
      - PGPOOL_FAILOVER_ON_BACKEND_SHUTDOWN=on
      - PGPOOL_SEARCH_PRIMARY_NODE_TIMEOUT=0
      
      # Logging configuration
      - PGPOOL_LOG_CONNECTIONS=on
      - PGPOOL_LOG_HOSTNAME=on
      - PGPOOL_LOG_PER_NODE_STATEMENT=off
      
      # Bitnami compatibility
      - PGPOOL_ENABLE_LDAP=no
      - PGPOOL_ENABLE_LOAD_BALANCING=yes
      - PGPOOL_ENABLE_POOL_HBA=yes
      - PGPOOL_ENABLE_POOL_PASSWD=yes
      
    networks:
      - pgpool-network
    depends_on:
      - postgres-master
      - postgres-replica1
      - postgres-replica2
    healthcheck:
      test: ["CMD", "/opt/bitnami/scripts/pgpool/healthcheck.sh"]
      interval: 15s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Optional: PostgreSQL Admin tool (pgAdmin)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: adminpass
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "8080:80"
    networks:
      - pgpool-network
    depends_on:
      - pgpool

volumes:
  postgres_master_data:
    driver: local
  postgres_replica1_data:
    driver: local
  postgres_replica2_data:
    driver: local

networks:
  pgpool-network:
    driver: bridge 